{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\danig\\\\OneDrive\\\\Escritorio\\\\SABAH\\\\front-end\\\\src\\\\pages\\\\login\\\\ventanas\\\\recuperar contrasena2\\\\Recuperar2.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport Button from '@atlaskit/button/standard-button';\nimport CrossIcon from '@atlaskit/icon/glyph/cross';\nimport { N500 } from '@atlaskit/theme/colors';\nimport { token } from '@atlaskit/tokens';\nimport Modal, { ModalBody, ModalFooter, ModalHeader, ModalTitle, ModalTransition } from '@atlaskit/modal-dialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Recuperar2() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const openModal = useCallback(() => setIsOpen(true), []);\n  const closeModal = useCallback(() => setIsOpen(false), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      appearance: \"primary\",\n      onClick: openModal,\n      children: \"Open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalTransition, {\n      children: isOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: closeModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n            children: \"Custom modal header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            appearance: \"link\",\n            onClick: closeModal,\n            children: /*#__PURE__*/_jsxDEV(CrossIcon, {\n              label: \"Close Modal\",\n              primaryColor: token('color.text.subtle', N500)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"If you wish to customise a modal dialog, it accepts any valid React element as children.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Modal header accepts any valid React element as children, so you can use modal title in conjunction with other elements like an exit button in the top right.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Modal footer accepts any valid React element as children. For example, you can add an avatar in the footer. For very custom use cases, you can achieve the same thing without modal footer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            appearance: \"subtle\",\n            children: \"Secondary Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            appearance: \"primary\",\n            onClick: closeModal,\n            autoFocus: true,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Recuperar2, \"nUkM7/ANByecS1NvYjjNOGYqoak=\");\n_c = Recuperar2;\nvar _c;\n$RefreshReg$(_c, \"Recuperar2\");","map":{"version":3,"names":["React","useCallback","useState","Button","CrossIcon","N500","token","Modal","ModalBody","ModalFooter","ModalHeader","ModalTitle","ModalTransition","jsxDEV","_jsxDEV","Recuperar2","_s","isOpen","setIsOpen","openModal","closeModal","children","appearance","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","label","primaryColor","autoFocus","_c","$RefreshReg$"],"sources":["D:/Users/danig/OneDrive/Escritorio/SABAH/front-end/src/pages/login/ventanas/recuperar contrasena2/Recuperar2.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\n\r\nimport Button from '@atlaskit/button/standard-button';\r\nimport CrossIcon from '@atlaskit/icon/glyph/cross';\r\nimport { N500 } from '@atlaskit/theme/colors';\r\nimport { token } from '@atlaskit/tokens';\r\n\r\nimport Modal, {\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalTitle,\r\n  ModalTransition,\r\n} from '@atlaskit/modal-dialog';\r\n\r\nexport default function Recuperar2() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const openModal = useCallback(() => setIsOpen(true), []);\r\n  const closeModal = useCallback(() => setIsOpen(false), []);\r\n\r\n  return (\r\n    <div>\r\n      <Button appearance=\"primary\" onClick={openModal}>\r\n        Open modal\r\n      </Button>\r\n\r\n      <ModalTransition>\r\n        {isOpen && (\r\n          <Modal onClose={closeModal}>\r\n            <ModalHeader>\r\n              <ModalTitle>Custom modal header</ModalTitle>\r\n              <Button appearance=\"link\" onClick={closeModal}>\r\n                <CrossIcon\r\n                  label=\"Close Modal\"\r\n                  primaryColor={token('color.text.subtle', N500)}\r\n                />\r\n              </Button>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <p>\r\n                If you wish to customise a modal dialog, it accepts any valid\r\n                React element as children.\r\n              </p>\r\n\r\n              <p>\r\n                Modal header accepts any valid React element as children, so you\r\n                can use modal title in conjunction with other elements like an\r\n                exit button in the top right.\r\n              </p>\r\n\r\n              <p>\r\n                Modal footer accepts any valid React element as children. For\r\n                example, you can add an avatar in the footer. For very custom\r\n                use cases, you can achieve the same thing without modal footer.\r\n              </p>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button appearance=\"subtle\">Secondary Action</Button>\r\n              <Button appearance=\"primary\" onClick={closeModal} autoFocus>\r\n                Close\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        )}\r\n      </ModalTransition>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}